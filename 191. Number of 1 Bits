public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
       int count=0;
 
       for(int i=0;i<32;i++){
           //Perform and operation to n if we get no zero value it means the bit at least significant poistion is 1
           if((n&1)!=0){
               count++;
           }
           //Do right shift each iteration
           n=n>>1;
       } 
        return count;
    }
}

//Method 2

public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
       int count=0;
       //Unsigned value 
       while(n!=0){
           //Perform n & (n-1) it will simply convert least significant 1 bit into 0
           n=n & (n-1);
          count++;
       } 
        return count;
    }
}
