class Solution {
    public int singleNumber(int[] nums) {
        //XOR property will be 0 when number is repeated
        int result=0;
        for(int i:nums){
            result=result^i; 
            
            //nums=[2,2,1,3,1]
            //On 1st interation result = 0^2=2;
            //On 2nd iteration result = 2^2=0;
            //On 3rd iteration result = 0^1=1
            //On 4th iteration result = 1^3;
            //On 5th iteration result = 1^3^1=3 -->Since 3^3 is 0;
            
        }
        return result;
    }
}

//method 2:Using hashset

class Solution {
    public int singleNumber(int[] nums) {
    HashSet<Integer> hs=new HashSet<Integer>();
    for(int i:nums){
      if(hs.contains(i)){
        hs.remove(i);
      }else{
        hs.add(i);
      }
    }
    Iterator<Integer> itr=hs.iterator();
    return itr.next();
  }    
}
